global:
  labels:
    ops.kodzik.cloud/chart: "platformex"
  defaults:
    imagePullSecrets:
      - "oci-kodzik"
    traefikEntrypoints:
      - web
      - websecure

envRefs:
  common:
    APP_ENV: prod
    COMMON: "1"
    SECRET_SAUCE:
      valueFrom:
        secretKeyRef:
          key: sauce
          name: app-secret
  worker:
    WORKER_MODE: "1"
  cron:
    CRON_MODE: "1"

imageRefs:
  demo:
    repository: "oci.kodzik.cloud/public/demko"
    tag: "1.0.0"
  test:
    repository: "oci.kodzik.cloud/public/test"
    tag: "2.3.4"

sealedSecrets:
  secret1:
    name: asecret
    namespace: xyz
    sealedData:
      - key: password
        value: (encrypted-value-goes-here)
    data:
      - key: username
        value: unencrypted-values-go-here
  secret2:
    name: bsecret
    sealedData:
      - key: passcode
        value: (encrypted-passcode)

traefikMiddlewares:
  - name: someForwardAuth
    spec:
      forwardAuth:
        address: "hxxp://auth.svc"
        authResponseHeaders:
          - X-Authservice

instances:
  1-plain:
    enableCrons: false
    enableWorkers: false
    deployments:
      one:
        replicas: 1
        revisionHistoryLimit: 2
        containers:
          one-container:
            image: oci.kodzik.cloud/public/one:1.0.0
            env:
              ONE: "1"
  default:
    enableCrons: true
    enableWorkers: true
    crons:
      legendary-cron-at-midnight:
        concurrencyPolicy: "Replace"
        failedJobsHistoryLimit: 2
        schedule: "0 0 * * *"
        timezone: "Europe/Warsaw"
        jobTemplate: { }
        containers: { }
    deployments:
      consumer-xyz:
        worker: true
        replicas: 1
        containers:
          xyz:
            imageRef: demo
            command: ["/bin/sh", "-c", "bin/console app:barize:foos"]
            env:
              EIP: "false"
            envRefs:
              - common
              - worker
      consumer-qwe:
        worker: true
        replicas: 1
        containers:
          qwe:
            image: oci.kodzik.cloud/public/konsumer:1.2.3
            env:
              EIP: "false"
      testowy:
        replicas: 3
        revisionHistoryLimit: 5
        service:
          type: ClusterIP
          port: 80
          targetPort: 80
          protocol: TCP
          portName: portname
        ingress:
          traefikEntrypoints:
            - web
          # if you need route for one host with no middlewares and using default service - use ingress.simple
          simple: "beta.example.com"
          # routes let you define routes with rules and middlewares (we plan full IngressRoute support in future)
          routes:
            - match: Host(`test.example.com`)
        initContainers:
          pszemek:
            imageRef: demo
            volumeMounts:
              - mountPath: /var/lib/xyz-conf/.my.cnf
                name: sum-volum
                subPath: derp.cnf
            envFrom:
              - configMapRef:
                  name: konfigmapa
            env:
              EIP: "true"
              PASSWORD:
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: app-secret
        containers:
          webapp:
            imageRef: demo
            lifecycle:
              preStop:
                exec:
                  command: [ "/bin/sh", "-c", "sleep 2" ]
            resources:
              requests:
                cpu: "200m"
                memory: "256Mi"
            livenessProbe:
              httpGet:
                path: /
                port: http
            readinessProbe:
              httpGet:
                path: /
                port: http
            ports:
              - name: web
                containerPort: 80
                protocol: TCP
            envRefs:
              - common
            envFrom:
              - configMapRef:
                  name: konfigmapa
            env:
              EIP: "false"